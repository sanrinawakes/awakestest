<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Awakening Conscious Type Exam ACT診断</title>
    <style>
        body {
            font-family: 'Helvetica Neue', Arial, 'Hiragino Kaku Gothic ProN', 'Hiragino Sans', Meiryo, sans-serif;
            background-color: #f4f6f8;
            color: #333;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
            min-height: 100vh;
            box-sizing: border-box;
            line-height: 1.6;
        }
        .container {
            background-color: #ffffff;
            padding: 25px 40px;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            width: 100%;
            max-width: 750px;
            text-align: center;
        }
        h1 {
            color: #2c3e50;
            margin-bottom: 25px;
            font-size: 2.0em;
        }
        h2 {
            color: #34495e;
            margin-top: 30px;
            margin-bottom: 15px;
            min-height: 45px; 
            font-size: 1.5em;
        }
        #question-text {
            font-size: 1.15em;
            color: #2c3e50;
            margin-bottom: 10px;
            text-align: left;
        }
        #question-supplement {
            font-size: 0.9em;
            color: #555;
            margin-bottom: 25px;
            min-height: 35px;
            text-align: left;
            padding: 15px;
            background-color: #f8f9fa;
            border-left: 4px solid #3498db;
            border-radius: 4px;
            line-height: 1.7;
        }
        #choices-area button {
            display: block;
            width: 100%;
            padding: 13px;
            margin: 9px 0;
            background-color: #3498db;
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 1em;
            transition: background-color 0.2s ease, transform 0.1s ease;
        }
        #choices-area button:hover {
            background-color: #2980b9;
        }
        #choices-area button:active {
            transform: scale(0.98);
        }
        #choices-area button.selected {
            background-color: #2ecc71;
            font-weight: bold;
            box-shadow: 0 0 8px rgba(46, 204, 113, 0.5);
        }
        #next-question-button, #start-button, #restart-button {
            background-color: #e67e22;
            color: white;
            padding: 12px 30px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 1.1em;
            margin-top: 25px;
            transition: background-color 0.2s ease, transform 0.1s ease;
        }
        #next-question-button:hover, #start-button:hover, #restart-button:hover {
            background-color: #d35400;
        }
        #next-question-button:active, #start-button:active, #restart-button:active {
            transform: scale(0.98);
        }
        #next-question-button:disabled {
            background-color: #bdc3c7;
            cursor: not-allowed;
        }
        #question-counter {
            font-size: 0.95em;
            color: #7f8c8d;
            margin-bottom: 20px;
        }
        #progress-bar-container {
            width: 100%;
            background-color: #ecf0f1;
            border-radius: 4px;
            margin-bottom: 20px;
            height: 12px;
            overflow: hidden;
        }
        #progress-bar {
            width: 0%;
            height: 100%;
            background-color: #3498db;
            border-radius: 4px;
            transition: width 0.3s ease-in-out;
        }
        #result-screen {
             margin-top: 30px;
        }
        #result-code {
            font-size: 2.2em;
            color: #c0392b;
            margin: 25px 0;
            padding: 15px;
            background-color: #f8f9fa;
            border: 1px solid #e0e0e0;
            border-radius: 6px;
            display: inline-block;
        }
        #start-screen p {
            font-size: 1.05em;
            line-height: 1.7;
            margin-bottom: 25px;
            color: #34495e;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Awakening Conscious Type Exam ACT診断</h1>

        <div id="start-screen">
            <p>この診断は、あなたの内面を探求し、自己変容の道筋を照らし出すためのお手伝いをします。</p>
            <p>全107問の質問にお答えいただくことで、あなたの現在のタイプと意識レベルが明らかになります。</p>
            <button id="start-button">診断を開始する</button>
        </div>

        <div id="quiz-screen" style="display:none;">
            <div id="progress-bar-container">
                <div id="progress-bar"></div>
            </div>
            <div id="question-counter"></div>
            <h2 id="question-text">（ここに質問文が表示されます）</h2>
            <p id="question-supplement">（ここに補足文が表示されます）</p>
            <div id="choices-area">
                </div>
            <button id="next-question-button" disabled>次へ</button>
        </div>

        <div id="result-screen" style="display:none;">
            <h2>診断結果</h2>
            <p>あなたのAwakening Conscious Type Exam ACT診断コードは...</p>
            <h3 id="result-code">（ここに結果コードが表示されます）</h3>
            <p>（詳細な結果の解説は今後のアップデートで表示されます。このコードを記録しておいてください。）</p>
            <button id="restart-button">もう一度診断する</button>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const choiceScores = [-2, -1, 0, 1, 2]; 
            const choiceTexts = [
                "全く当てはまらない",
                "あまり当てはまらない",
                "どちらとも言えない",
                "当てはまる",
                "よく当てはまる"
            ];
            
            const mChoiceTexts = {
                axis1: ["主に一人で静かに自分の内面と向き合っている時間", "主に他の人と活発に交流し、刺激を受け合っている時間", "一人の時間と他人といる時間の両方を大切にし、そのバランスが取れている時"],
                axis2: ["常に新しいアイデアや未来の可能性を追い求める", "現実的で確実な方法や過去の経験を重んじる", "新しい可能性に目を向けつつも、現実的な視点や実用性を忘れず、バランス良く物事を進める時"],
                axis3: ["主に論理的な正しさや客観的なデータ・事実を重視する", "主に関わる人々の気持ちや全体の調和を重視する", "論理的な正しさと人々の気持ちの両方を同じくらい大切にし、そのバランスが取れた結論を出す時"]
            };

            const allQuestions = [
// === 意識レベル測定用質問（32問）===
// === レベル1-2（恐怖・怒り・プライド）測定: 6問 ===
{ id: 1, question: "朝起きた時、「また今日も同じような一日か」という重い気持ちになり、布団から出るのが辛いと感じることがありますか？", supplement: "（例えば、目覚ましが鳴っても「あと5分...」を繰り返したり、会社や学校に行くことを考えるだけで気が重くなったりすること）", targetScore: "CL", scoreEffect: -1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 2, question: "予期せぬ出費（1万円以上）があった時、「どうしよう」と不安になり、実際に借金をしたり、支払いを待ってもらったりする必要がありますか？", supplement: "（例えば、急な医療費や家電の故障で、貯金を崩しても足りず、カードローンを使ったり、家族に借りたりせざるを得ない状況）", targetScore: "CL", scoreEffect: -1, isCheckQuestion: true, checkClearIf: [-1, -2], isLevel6Condition: false, isMChoice: false },

{ id: 3, question: "うまくいかないことがあると、「自分は運が悪い」「周りの人のせいだ」「環境が悪い」と考えてしまうことが多いですか？", supplement: "（例えば、仕事で失敗すると「上司の指示が悪い」、人間関係がうまくいかないと「相手が変わっている」など、自分以外に原因を求めること）", targetScore: "CL", scoreEffect: -1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 4, question: "他人から批判されたり間違いを指摘されると、深く傷ついて落ち込んだり、その人を避けたくなったりしますか？", supplement: "（例えば、ちょっとした注意でも「自分はダメだ」と感じたり、その後その人と会うのが気まずくて別の道を通ったりすること）", targetScore: "CL", scoreEffect: -1, isCheckQuestion: true, checkClearIf: [-1, -2], isLevel6Condition: false, isMChoice: false },

{ id: 5, question: "日常的にイライラしたり、些細なことで怒りを感じたり、誰かを心の中で批判していることがありますか？", supplement: "（例えば、レジで並んでいる時に「遅い！」とイライラしたり、テレビを見て「この人嫌い」と思ったり、家族の行動に「なんでこうなの」と腹を立てたりすること）", targetScore: "CL", scoreEffect: -1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 6, question: "社会のニュースを見て「この国はもうダメだ」「権力者が悪い」と怒りや無力感を感じ、SNSなどで批判的な意見を発信することがありますか？", supplement: "（例えば、政治のニュースを見て憤慨してTwitterで批判したり、「庶民は搾取されている」といった投稿をシェアしたりすること）", targetScore: "CL", scoreEffect: -1, isCheckQuestion: true, checkClearIf: [-1, -2], isLevel6Condition: false, isMChoice: false },

// === レベル3（勇気・中立・意欲）測定: 6問 ===
{ id: 7, question: "困難な状況でも「なんとかなる」「自分にもできることがある」と前向きに考え、実際に行動を起こすことができますか？", supplement: "（例えば、仕事で大きな課題を任されても「まずはここから始めよう」と一歩踏み出したり、問題が起きても「解決策を探そう」と動けること）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: true, checkClearIf: [1, 2], isLevel6Condition: false, isMChoice: false },

{ id: 8, question: "自分で決めた目標や習慣（運動、勉強、片付けなど）を、少なくとも1ヶ月以上継続できていますか？", supplement: "（例えば、「毎日10分ストレッチ」「週3回ジョギング」「寝る前の読書」など、完璧でなくても概ね続けられているかどうか）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: true, checkClearIf: [1, 2], isLevel6Condition: false, isMChoice: false },

{ id: 9, question: "異なる意見を持つ人と接する時、どちらが正しいか判断するより、「それぞれに理由があるのだろう」と中立的な立場で理解しようとしますか？", supplement: "（例えば、政治的な議論でも「なるほど、その立場からはそう見えるのか」と両方の視点を理解しようとし、すぐに白黒つけようとしないこと）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 10, question: "現状をより良くするために、具体的な計画を立てて、小さくても実際の行動に移していますか？", supplement: "（例えば、収入を増やすために資格の勉強を始めたり、健康のために食事を見直したり、人間関係改善のために自分から連絡を取ったりすること）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 11, question: "以前は嫌いだった人や苦手だった状況でも、今は比較的平静に対処できるようになっていますか？", supplement: "（例えば、昔は顔も見たくなかった人とも普通に挨拶できたり、苦手だった場面（人前で話すなど）でも落ち着いて対応できるようになったこと）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 12, question: "日々の生活の中で、小さな成長や改善を実感し、「少しずつでも前進している」と感じることがありますか？", supplement: "（例えば、仕事のスキルが向上したり、家族との会話が増えたり、部屋が前より片付いているなど、日常の中での前向きな変化を感じること）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

// === レベル4（受容・理性・愛）測定: 6問 ===
{ id: 13, question: "他人の失敗や欠点を見ても、批判するより「誰にでもあることだ」と温かく受け入れられることが多いですか？", supplement: "（例えば、同僚のミスを見ても「自分もやったことがある」と共感したり、家族の欠点も「それも含めてその人らしさ」と受け入れられること）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 14, question: "感情的になりそうな場面でも、一旦深呼吸して、事実を整理してから冷静に対応できることが多いですか？", supplement: "（例えば、カッとなりそうな時も「待てよ、実際は何が起きたんだ？」と考え直したり、相手の立場も考慮して理性的な判断ができること）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: true, checkClearIf: [1, 2], isLevel6Condition: false, isMChoice: false },

{ id: 15, question: "意見の対立があっても、お互いの根底にある思いを理解し合い、建設的な解決策を見つけられることが多いですか？", supplement: "（例えば、家族で意見が分かれても「君はこうしたいんだね」と受け止め、みんなが納得できる新しい案を一緒に作り上げられること）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: true, checkClearIf: [1, 2], isLevel6Condition: false, isMChoice: false },

{ id: 16, question: "見返りを期待せず、相手の幸せが自分の喜びになるような、純粋な思いやりの行動を取ることがありますか？", supplement: "（例えば、誰も見ていなくても困っている人を助けたり、相手が気づかなくても陰で支えたり、「ありがとう」を言われなくても満足できる行動）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 17, question: "複雑な問題に対して、感情論や偏見を排除し、データと論理に基づいて、より大きな視点から解決策を見出せますか？", supplement: "（例えば、家族の問題でも感情的にならず全体最適を考えたり、仕事で利害が対立しても客観的な基準で判断できること）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 18, question: "本当に困った時に心から頼れる人が、家族以外にも10人以上いて、お互いに深い信頼関係を築けていますか？", supplement: "（例えば、深夜でも電話できる友人、人生相談ができる先輩、困った時に駆けつけてくれる仲間など、利害関係を超えた繋がりがある人の数）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: true, checkClearIf: [1, 2], isLevel6Condition: false, isMChoice: false },

// === レベル5（喜び・平和・至福）測定: 6問 ===
{ id: 19, question: "日常の何気ない瞬間に、深い喜びや感謝の気持ちが湧き上がり、「生きているだけで素晴らしい」と感じることがありますか？", supplement: "（例えば、朝日を見て心が震えたり、ご飯を食べながら「ありがたい」と涙が出そうになったり、理由もなく幸せな気持ちに包まれること）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 20, question: "以前なら動揺していた出来事（批判、失敗、喪失など）があっても、深い部分では平静を保ち、それも人生の一部として受け入れられますか？", supplement: "（例えば、大きな失敗をしても「これも必要な経験」と感じたり、誰かに批判されても内なる平和が乱されない状態）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: true, checkClearIf: [1, 2], isLevel6Condition: false, isMChoice: false },

{ id: 21, question: "物事の表面的な対立や矛盾を超えて、より深い調和や統一性を感じ取ることができますか？", supplement: "（例えば、争っている両者の根底には同じ願いがあると見抜いたり、一見バラバラな出来事の中に大きな流れを感じ取ったりすること）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 22, question: "自分の内側から湧き出る直感や創造性を信頼し、それに従って自由に表現したり行動したりできていますか？", supplement: "（例えば、論理的な説明はできなくても「これだ！」と感じることに従ったり、人の目を気にせず自分らしい表現をしたりすること）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 23, question: "他者の成功や幸せを、嫉妬や比較なしに、心から一緒に喜べることが多いですか？", supplement: "（例えば、同僚の昇進を「良かったね！」と純粋に祝福したり、友人の幸せな報告を聞いて自分も幸せな気持ちになること）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 24, question: "人生で起こるすべての出来事に深い意味があると感じ、たとえ困難でも「これでよかった」と思えることが多いですか？", supplement: "（例えば、過去の辛い経験も「あれがあったから今の自分がある」と感謝できたり、起こることすべてに必然性を感じること）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

// === レベル6（悟り・一体性）測定: 3問 ===
{ id: 25, question: "日常で接するすべての人に対して、批判や判断なく、自然に慈愛の気持ちで接することができていますか？", supplement: "（例えば、どんな人にも仏性や神性を見出し、乞食から社長まで分け隔てなく、すべての人に深い敬意と愛を感じる状態）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: true, isMChoice: false },

{ id: 26, question: "思考や感情を、それに同一化することなく、ただ観察している純粋な意識として在ることが、日常的にできていますか？", supplement: "（例えば、怒りが湧いても「怒りがある」と観察し、思考が流れても「思考している」と気づき、それらに巻き込まれない透明な意識状態）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: true, isMChoice: false },

{ id: 27, question: "自他の境界が消え、すべての存在と深い一体感を感じ、宇宙全体が一つの意識であることを実感として知っていますか？", supplement: "（例えば、他人の痛みが自分の痛み、他人の喜びが自分の喜びとして直接感じられ、木や石にも意識を感じる非二元の状態）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: true, isMChoice: false },

// === レベル2（葛藤・空回り）の追加質問 ===
{ id: 28, question: "一生懸命努力しているのに、なぜか空回りして結果が出ず、『もっと頑張らないと』と自分を追い込んでしまうことがありますか？", supplement: "（例えば、仕事で誰よりも長時間働いているのに評価されなかったり、ダイエットを厳しくやっているのに効果が出なかったりして、『まだ努力が足りないんだ』と自分を責めてしまうような状態）", targetScore: "CL", scoreEffect: -1, isCheckQuestion: true, checkClearIf: [-1, -2], isLevel6Condition: false, isMChoice: false },

{ id: 29, question: "『これをやれば認められる』『これができれば幸せになれる』と思って頑張るけれど、達成してもすぐに次の目標を探してしまい、満足感が続かないことがありますか？", supplement: "（例えば、資格を取れば認められると思って勉強したのに、取得後も不安で次の資格を探したり、『痩せたら自信が持てる』と思ってダイエットしても、痩せてもまだ不安が消えないような状況）", targetScore: "CL", scoreEffect: -1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

// === レベル3→4の移行期質問 ===
{ id: 30, question: "以前は『自分のやり方が正しい』と強く思っていたことでも、最近は『他の人のやり方にも良さがあるかも』と柔軟に考えられるようになってきましたか？", supplement: "（例えば、仕事の進め方で衝突していた同僚のやり方を観察して『なるほど、そういう利点もあるのか』と素直に認められたり、子育ての方法で夫婦の意見が違っても『両方試してみよう』と思えるようになったような変化）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

// === レベル4→5の移行期質問 ===
{ id: 31, question: "人のためになることをする時、『良い人だと思われたい』という気持ちよりも、純粋に『この人の役に立ちたい』『世の中が少しでも良くなれば』という思いで行動することが増えていますか？", supplement: "（例えば、ボランティアをする時も『履歴書に書ける』とかではなく、純粋に困っている人の笑顔が見たくて参加したり、誰も見ていなくてもゴミを拾ったりするような、見返りを求めない行動が自然にできること）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

// === レベル5の追加質問（創造性・貢献）===
{ id: 32, question: "自分の才能や経験を活かして、社会や他者に価値を提供することに深い喜びを感じ、それが自然なライフワークになっていますか？", supplement: "（例えば、自分の得意分野で人を助けたり、培ってきた知識を次世代に伝えたり、創作活動で人々に感動を与えたりすることが、義務感ではなく自然な喜びとして日常的に行えている状態）", targetScore: "CL", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

// === 第1軸：内向/外向（25問）===
// === 内向型（S1）の質問: 8問 ===
{ id: 33, question: "何か新しいことを思いついたり、難しい問題についてじっくり考えを深めたりするのは、周りに誰もいない静かな場所で、一人でいる時が多いですか？", supplement: "（例えば、たくさんの人がいる賑やかなカフェで友人と話している時よりも、自分の部屋や図書館のような静かな場所で、誰にも邪魔されずに一人で考え事をしている時に、一番良いアイデアが浮かんだり、考えがまとまったりする）", targetScore: "S1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 34, question: "大勢の人と長時間一緒に過ごした後には、一人になって静かに自分の心と向き合い、「ふーっ」と一息ついてエネルギーを取り戻す時間が必要だと感じますか？", supplement: "（例えば、楽しいお祭りや友人たちとの旅行の後でも、一人でゆっくりお茶を飲んだり、好きな音楽を聴いたりすることで、心のバランスが元に戻り、また元気になれる）", targetScore: "S1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 35, question: "誰かに何かを伝えたり、何か新しいことを始めたりする前には、まず自分の頭の中で「何をどう言おうかな」「どんな順番でやろうかな」と、じっくり言葉を選んだり計画を練ったりする方ですか？", supplement: "（例えば、大切な人に気持ちを伝える手紙を書く前に、まず下書きをして何度も読み返したり、料理を作る前にレシピをしっかり確認して手順を頭の中で組み立てたりする）", targetScore: "S1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 36, question: "自分の好きなことや趣味に夢中になる時間は、他の人との付き合いよりも大切で、できるだけ優先したいと感じることが多いですか？", supplement: "（例えば、週末の予定を立てる際、友人からの誘いがあっても、自分の好きな読書の時間や、一人でゆっくりと散歩する時間をまず確保したいと思うことが多い）", targetScore: "S1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 37, question: "何か新しいことを学ぶとき、大勢で一緒にワイワイ学ぶよりも、自分のペースでじっくりと資料を読んだり、何度も納得いくまで考えたりする方が、内容を深く自分のものにできると感じますか？", supplement: "（例えば、料理教室で新しいレシピを習った後、すぐに他の人と感想を言い合うよりも、まず家に帰って一人でレシピを読み返し、自分なりに手順を再確認したり、実際に作ってみたりする方が身につく）", targetScore: "S1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 38, question: "周りがガヤガヤしていたり、たくさんの人の話し声が聞こえたりする環境では、なかなか集中できず、静かで落ち着いた場所で作業や読書をすることを好みますか？", supplement: "（例えば、大切な仕事や勉強をする際、賑やかなカフェやオープンスペースよりも、静かな自分の部屋や図書館の隅っこの方が、断然はかどると感じる）", targetScore: "S1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 39, question: "他の人たちが感情的にもつれたり、複雑な人間関係で悩んだりしているような場面に遭遇した際、あなたは積極的に間に入って何かをしようとするよりも、実際に距離を置き、直接的には関わらないようにすることが多いですか？", supplement: "（例えば、友人グループの中で誰かと誰かが言い争いを始めた時、ハラハラしながらも自分からはあまり口を出さず、その場が自然と収まるのを待ったり、そっとその場を離れたりするような、具体的な行動や対応の仕方）", targetScore: "S1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 40, question: "あなたの頭の中や心の中には、豊かな空想の世界や、次々と思いつく考え事、あるいは様々な感情などが広がっていて、一人でいてもあまり退屈することはないですか？", supplement: "（例えば、特に何もしていなくても、自分の頭の中で色々な物語を想像したり、興味のあることについて深く考えを巡らせたり、過去の出来事を思い出して様々な感情を味わったりするだけで、時間はあっという間に過ぎていく）", targetScore: "S1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

// === 外向型（P1）の質問: 8問 ===
{ id: 41, question: "初めて会う人が多い集まりでも、あまり緊張せずに自分から話しかけ、新しい出会いとしてその場を楽しむことができますか？", supplement: "（例えば、地域のイベントや趣味の集まりなどで、知らない人ばかりでも物怖じせずに会話の輪に入っていったり、新しい友達を作ろうと積極的に行動したりする）", targetScore: "P1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 42, question: "たくさんの人と一緒に賑やかに過ごしたり、活気のあるお祭りやイベントに参加したりすると、気分が高揚し、「楽しい！」「元気が出てきた！」と感じることが多いですか？", supplement: "（例えば、友人たちとのホームパーティーや、大勢で盛り上がるコンサートなどに行くと、普段よりもテンションが上がり、エネルギーが満ちてくるような体験）", targetScore: "P1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 43, question: "何か困ったことの解決策を考えたり、新しいアイデアを出したりする時、一人でじっくり考えるよりも、他の人とワイワイ話し合ったり、意見を交換したりする中で良い考えが浮かぶことが多いですか？", supplement: "（例えば、仕事で行き詰まった時、一人でウンウン唸るよりも、同僚や友人に相談して話しているうちに「あ、そうか！」と解決の糸口が見つかったり、面白いアイデアが湧いてきたりする）", targetScore: "P1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 44, question: "ご自身の考えや最近あった面白い出来事、あるいは感動したことなどを、他の人に話して聞かせたり、積極的に共有したりすることに、心からの喜びを感じますか？", supplement: "（例えば、週末に見た映画の感想を月曜日に職場で話したくてたまらない、といった感じ。自分の体験や思いを誰かと分かち合うこと自体が楽しい、と感じるかどうか）", targetScore: "P1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 45, question: "何人かのグループで何かを一緒に行う時（例えば、旅行の計画、地域のイベント準備など）、自然とみんなの意見を聞いたり、率先して発言したり、場をまとめたりする役割を担うことが多いですか？", supplement: "（例えば、友人たちとバーベキューの計画を立てる際、みんなの希望を聞きながら場所や日程を提案したり、当日の役割分担を決めたりと、自然と中心になって話を進めている）", targetScore: "P1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 46, question: "一人で静かに過ごす時間が長すぎたり、単調な作業が続いたりすると、だんだん気分が沈んできて、外に出かけたり、誰かと話したりして新しい刺激や変化を求めたくなりますか？", supplement: "（例えば、週末にずっと家に一人でいると何だか物足りなくなってきて、急に友人を誘って遊びに行きたくなったり、何か新しいことを始めたくなったりする）", targetScore: "P1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 47, question: "自分の意見や考えを、周りの人にためらわずに、はっきりと口に出して伝えることができますか？", supplement: "（例えば、会議などで、自分の考えが他の人と違っていても、「私はこう思います」と臆せずに発言したり、自分の希望や要求をストレートに伝えたりすることができるかどうか）", targetScore: "P1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 48, question: "一人で黙々と何かを成し遂げるよりも、他の人たちと一緒に力を合わせ、協力し合って何かを達成することに、より大きな喜びや「やった！」という達成感を感じますか？", supplement: "（例えば、文化祭の準備やチームスポーツのように、仲間と目標を共有し、励まし合いながら一緒に何かを作り上げたり、困難を乗り越えたりすることに、強いやりがいや感動を覚える）", targetScore: "P1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

// === バランス型（M1）の質問: 8問 ===
{ id: 49, question: "一人でじっくりと何かに集中する時間も大切だと感じる一方で、他の人と積極的に関わって新しい刺激を受けたり、何かを学んだりすることも同じくらい大切だと感じ、実際に両方の時間を持とうとしますか？", supplement: "（例えば、午前中は自分の部屋で静かに読書や勉強に集中し、午後は友人たちと集まって新しい趣味の活動に参加する、といったように、一人の時間と人と関わる時間の両方をバランス良く楽しむのが自分に合っていると感じ、そうした時間の使い方を実践している）", targetScore: "M1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 50, question: "その時々の状況や目的に合わせて、周りの人と活発におしゃべりをして場を盛り上げる役割と、静かに相手の話を聞いたり自分の内面と向き合ったりする役割を、意識して使い分けることができますか？", supplement: "（例えば、大勢の集まりでは積極的に皆に話しかけて場を和ませるけれど、一対一で相談に乗る時はじっくり相手の話を聞くことに集中する、といったように、その場に応じて自分の振る舞いを自然と調整している）", targetScore: "M1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 51, question: "一人で静かに過ごす時間と、他の人とワイワイ楽しく過ごす時間の両方が、あなたにとっては同じくらい大切で、そのバランスが取れている時に「ああ、自分らしいな」「満たされているな」と最も心地よく感じますか？", supplement: "（例えば、週末に友人と賑やかに出かける日もあれば、次の日は家で一人でゆっくりと趣味に没頭する日もある、といったように、どちらか一方に偏るのではなく、両方の時間があることで心が満たされ、充実感を得られる）", targetScore: "M1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 52, question: "新しい場所やグループ（例えば、初めて参加する習い事の教室や、新しい職場など）に入った時、あなたは周りの状況や人々の様子をよく見て、時には積極的に自分から話しかけて早く打ち解けようとし、また別の時にはまずじっくりと人間関係や全体の雰囲気を観察してから関わっていく、というように、その場に応じた関わり方を柔軟に使い分けていますか？", supplement: "（例えば、新しい職場で歓迎会のような賑やかな場があれば、自分から積極的に参加して多くの人と話そうと試みるけれど、普段の業務が始まってからは、まず周りの仕事の進め方や人間関係を静かに観察してから、自分の関わり方を決めていく、といったように、一方的なパターンではなく、状況に合わせて自分の出方を選んでいる）", targetScore: "M1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 53, question: "大勢で賑やかに楽しむパーティーのような集まりも好きですが、それと同じくらい、気心の知れた友人2～3人とカフェなどでじっくりと深い話をする時間も大切だと感じ、実際にどちらの時間も楽しんでいますか？", supplement: "（例えば、大人数でワイワイ盛り上がるのも楽しいけれど、時には親しい友人と二人きりで、普段は話せないような真面目な話や心の内を語り合う時間も、あなたにとってはかけがえのない時間である）", targetScore: "M1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 54, question: "仕事や何かを学ぶ時、一人で集中して深く考えたり調べたりする作業と、他の人と協力して意見を出し合ったり一緒に作業したりすることのどちらも、状況に応じてバランス良く行うことを好みますか？", supplement: "（例えば、レポートを書く時はまず一人で資料を読み込んで集中して書き進め、その後で他の人に読んでもらって意見を聞いたり、チームで役割分担して共同で何かを作り上げたりする、といった両方のアプローチを大切にしている）", targetScore: "M1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 55, question: "初めて会う人に対して、相手の雰囲気や話し方をよく見て、積極的に自分から話しかけた方が良さそうか、それとも少し距離を置いて相手のペースに合わせた方が良さそうかを、自然と判断して対応を変えることができますか？", supplement: "（例えば、相手がとても話し好きでオープンな人だと感じたら、自分も積極的に色々質問したり話したりするけれど、相手が少しシャイで控えめなタイプだと感じたら、無理に話させようとせず、まずはにこやかに相槌を打つことから始める）", targetScore: "M1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 56, question: "あなたが、一人でじっくり考えたり作業したりすることで得られる深い集中力や自分なりのアイデアと、他の人と活発に関わることで得られる新しい情報や人からの刺激の両方を、ご自身の目標を達成したり、日々の生活をより豊かにしたりするために、バランス良く、そして効果的に活かせていると実感していますか？", supplement: "（例えば、午前中は一人で集中して大切な企画書を練り上げ、午後はその企画についてチームの仲間と活発に意見交換し、さらに良いものに仕上げていく、といったように、内向きの活動で得たものと外向きの活動で得たものを、その時々でうまく使い分け、お互いを高め合うように活用できている）", targetScore: "M1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

// === 特別な3択M質問（第1軸）===
{ id: 57, question: "あなたが最も『自分らしく、満たされている』と感じ、充実感を得られるのは、主に以下のどの時間の使い方をしている時ですか？", supplement: "（3つの選択肢から1つだけ選んでください）", targetScore: "M1", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: true },

// === 第2軸：直観/現実（25問）===
// === 直観型（V2）の質問: 8問 ===
{ id: 58, question: "何か新しい企画やアイデアを考えるとき、これまでのやり方や常識にとらわれず、「こんなことができたら面白いな」「未来はこうなるかもしれない」と、自由な発想で新しい可能性を探求することがよくありますか？", supplement: "（例えば、町内会のイベントを企画する際、去年と同じことをするのではなく、「今まで誰もやったことのない、あっと驚くような企画はできないかな？」とワクワクしながら考える）", targetScore: "V2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 59, question: "何か新しいことを始める際、細かく計画を立てたり過去のデータを分析したりするよりも、「これは絶対にうまくいく！」という強い直感や「こうなったら最高だ！」という未来のイメージに導かれて、思い切って行動を起こすことが多いですか？", supplement: "（例えば、お店を開きたいと思った時、完璧な事業計画書ができるのを待つよりも、「この場所ならきっとお客さんがたくさん来る！」という強いひらめきを信じて、まず物件を探し始めるような）", targetScore: "V2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 60, question: "これまで全く知らなかった分野のことや、新しく登場した技術（例えばAIや宇宙開発など）について学ぶことに、強い好奇心が刺激され、「もっと知りたい！」とワクワクすることがよくありますか？", supplement: "（例えば、テレビやネットで最先端の科学技術のニュースを見ると、「これが私たちの生活をどう変えるんだろう？」と想像が膨らみ、関連する記事を夢中になって読んでしまう）", targetScore: "V2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 61, question: "数年後、あるいは十年後といった少し先の未来がどうなっているかを想像したり、社会や自分の生活がどう変わっていくかを長期的な視点で考えたりすることが好きで、実際にそうした空想や構想に時間を費やしていますか？", supplement: "（例えば、現在の社会の動きを見ながら「10年後にはこんな乗り物が当たり前になっているかもしれないな」と想像したり、自分の人生の長期的な目標や夢について思いを巡らせたりするのが、あなたにとって楽しい時間である）", targetScore: "V2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 62, question: "既存のルールや「こうあるべきだ」という常識にとらわれず、「もし全く違うやり方をしたらどうなるだろう？」「こんなことは可能だろうか？」と、自由な発想で物事を考えたり、新しい可能性を試してみたりすることが好きですか？", supplement: "（例えば、料理をする時、レシピ通りに作るだけでなく、「ここにこの調味料を加えたらもっと美味しくなるかも？」と自分なりにアレンジを加えたり、普段の散歩道でも「この脇道を入ったらどこに出るんだろう？」と探検してみたりする）", targetScore: "V2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 63, question: "何か新しいことや複雑な仕組み（例えば、新しいアプリの使い方や、社会の制度など）を理解しようとする時、細かい手順や個々の情報を一つ一つ覚えるよりも、まず「これは全体として何を目指しているのか」「どんな基本的な考え方で成り立っているのか」という大きな枠組みや本質を掴むことを重視しますか？", supplement: "（例えば、新しいゲームを始める時、操作方法の細かい説明書を読むよりも、まず「このゲームの目的は何で、どうすれば勝てるのか」という全体像を把握しようとしたり、物語の登場人物の細かい設定より、その物語が伝えたい大きなテーマを感じ取ろうとしたりする）", targetScore: "V2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 64, question: "毎日同じことの繰り返しや、手順が決まりきった作業よりも、常に新しい課題に取り組んだり、変化に富んだ活動をしたりする方が、あなたはより「自分らしくいられる」「生き生きできる」と感じ、実際にそうした環境を求めて行動しますか？", supplement: "（例えば、決まった時間に同じ作業をする仕事よりも、日によって内容が変わったり、新しいプロジェクトに次々と挑戦したりする仕事の方が、あなたのやる気を引き出し、より能力を発揮できると感じるような）", targetScore: "V2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 65, question: "会話の中で、具体的な出来事や実用的な情報交換よりも、「もし世界がこうなったら…」とか「幸せの本当の意味とは…」といった、目に見えない抽象的な考えや未来の可能性について語り合うことに、より大きな魅力を感じますか？", supplement: "（例えば、友人との雑談でも、昨日のテレビ番組の話より、「100年後の人間はどうやって暮らしていると思う？」といったSFのような話題や、人生の意味について深く語り合う方が、心が躍るような）", targetScore: "V2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

// === 現実型（G2）の質問: 8問 ===
{ id: 66, question: "何か新しいことを学ぶとき、フワッとした全体のイメージや可能性の話よりも、「具体的にどうやるの？」「実際に役立つ知識なの？」といった、はっきりとした手順や実際に使える情報を求めることが多いですか？", supplement: "（例えば、新しい料理のレシピを学ぶなら、料理研究家の思いや背景の話よりも、まず材料の正確な分量や、具体的な調理の手順、そして美味しく作るためのコツを詳しく知りたい）", targetScore: "G2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 67, question: "何か物事を進めるとき、新しい方法を試して冒険するよりも、以前から実績があって多くの人が「これが確実だ」と言っているやり方や、自分が慣れ親しんだ方法を選ぶことで安心し、実際にそうすることが多いですか？", supplement: "（例えば、旅行で新しいホテルを探す際、未知の宿に挑戦するよりも、口コミ評価が高く、多くの人が利用していて安心できるホテルを選んだり、いつも使っている使い慣れた道具やアプリを好んで使い続けたりする）", targetScore: "G2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 68, question: "日々の暮らしや仕事において、ある程度決まった日課や手順があり、先の見通しが立つ安定した状態を心地よいと感じ、急な予定変更や予期せぬ出来事が起こることは、できるだけ避けたいと思っていますか？", supplement: "（例えば、毎朝同じ時間に起きて同じルートで通勤する方が落ち着いたり、仕事の手順が明確に決まっている方が安心して取り組めたり、週末の予定も早めに立ててその通りに過ごしたい）", targetScore: "G2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 69, question: "何か大切なこと（例えば、契約書の内容、家電製品の取扱説明書、旅行のスケジュールなど）を確認する際、細かい部分や具体的な数値・データにも注意を払い、それらを正確に把握し、きちんと記録したり管理したりすることを実際に心がけていますか？", supplement: "（例えば、大切な書類にサインする前には隅々まで目を通したり、家計簿をつける際にはレシートをきちんと保管して1円単位で記録したり、旅行の持ち物リストを作って一つ一つ確認したりする）", targetScore: "G2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 70, question: "何か新しい判断をしたり行動を起こしたりする際、過去の自分の経験や、そこから学んだ「こうした方がうまくいく」という教訓を思い出し、それを元に堅実に物事を進めていくことが多いですか？", supplement: "（例えば、新しい仕事に取り組む際、以前似たような仕事で成功したやり方や、失敗から学んだ注意点を活かそうとしたり、経験豊富な年上の人のアドバイスを「なるほど」と参考にしたりする）", targetScore: "G2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 71, question: "誰かに何かを説明したり伝えたりする時、比喩やあいまいな表現はできるだけ避け、具体的な事実や実際にあった出来事、そして誰にでも分かりやすい言葉を選んで話すようにしていますか？", supplement: "（例えば、会議で自分の考えを報告する際、夢や理想を語るよりも、「実際にこれだけの成果が出ました」「具体的な手順はこうです」と、数値や事実を交えて分かりやすく説明することを心がける）", targetScore: "G2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 72, question: "何か新しいことを始める前に（例えば、料理、DIY、新しい趣味など）、まず必要な道具や材料が全て揃っているか、手順や注意点が書かれた説明書などをしっかり読み込んでいるかを確認し、万全の準備を整えてから取り掛かることが多いですか？", supplement: "（例えば、日曜大工で棚を作ろうと思ったら、まず設計図をよく見て、必要な木材やネジ、工具が全て揃っているかを確認してから作業を始める。「とりあえずやってみよう」と見切り発車することは少ない）", targetScore: "G2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 73, question: "昔から地域で受け継がれてきたお祭りや、お正月・お盆のような伝統的な行事、あるいは古くからの慣習やしきたりに対して、それらが持つ意味や価値を尊重し、大切に守っていきたいという気持ちを持っていますか？", supplement: "（例えば、近所のお祭りがあれば積極的に参加したり、お墓参りや季節の行事を大切にしたり、昔ながらの風習や地域の文化に触れると心が落ち着いたりする。新しいもの好きというよりは、古くからある良いものを大切にしたいという気持ち）", targetScore: "G2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

// === バランス型（M2）の質問: 8問 ===
{ id: 74, question: "新しいことを始める時、夢や理想を描きながらも、実際に必要な物を買いに行ったり、具体的な準備を始めたりすることが多いですか？", supplement: "（例えば、『家庭菜園をやりたい！』と思ったら、その週末には実際にホームセンターに行って土やプランターを見に行ったり、育て方の本を買ってきたりする。ただ『いいなあ』と思うだけでなく、実際に動き始めること）", targetScore: "M2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 75, question: "計画通りに物事を進めている途中でも、もっと良い方法を見つけたら、実際に計画を変更して新しいやり方を試すことがありますか？", supplement: "（例えば、ダイエットで決めた運動を続けていたけど、友達から聞いた別の方法の方が自分に合いそうだと思ったら、実際にそちらに切り替えてみる。頭で考えるだけでなく、本当にやり方を変える行動力があること）", targetScore: "M2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 76, question: "新しい情報や流行を知った時、まず少しだけ試してみて、良ければ本格的に取り入れるという段階的な行動を実際にとっていますか？", supplement: "（例えば、新しい健康法を聞いたら、いきなり全部やるのではなく、まず1週間だけ試してみる。新しいアプリも、まず無料版を使ってみる。慎重さと好奇心の両方を実際の行動で示していること）", targetScore: "M2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 77, question: "大きな目標を立てる時、理想を描きながらも、実際の時間やお金の制約を考えて、現実的な計画に落とし込んで実行していますか？", supplement: "（例えば、『家族で海外旅行に行きたい』という夢があっても、実際の予算と休みを計算して『まず国内の素敵な場所から始めよう』と具体的に宿を予約したり、実際に出かけたりすること）", targetScore: "M2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 78, question: "本やテレビで学んだことを、実際に自分の生活で試してみることが多いですか？", supplement: "（例えば、健康番組で見た体操を翌日から実際にやってみたり、料理番組のコツを夕飯で試したり、ただ『へー』で終わらせずに実践すること）", targetScore: "M2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 79, question: "今までのやり方でうまくいかない時、実際に新しい方法を調べて試したり、人に聞いて変えてみたりしていますか？", supplement: "（例えば、掃除の仕方や収納方法を変えてみたり、子供への接し方を本で読んだ新しい方法に実際に変えてみたり、行動を変える柔軟性があること）", targetScore: "M2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 80, question: "物事を「これが絶対に正しい」「あれは完全に間違いだ」と白黒はっきり決めつけるよりも、状況や相手の立場によって色々な見方があることを理解し、「どちらの意見にも一理あるな」と多様な視点を受け入れたり、その時々で最も適切な判断をしたりと、柔軟に対応することの方が多いですか？", supplement: "（例えば、ある問題に対して、すぐに一つの答えを出すのではなく、「Aという考え方もあるし、Bという考え方もできる。この場合はCという折衷案がいいかもしれない」というように、様々な可能性を考慮して、型にはまらない柔軟な対応をする）", targetScore: "M2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 81, question: "何か新しい情報や知識を学ぶ際（例えば、本を読んだり、セミナーに参加したり、人から話を聞いたりする時）、ただ知識として頭に入れるだけでなく、「これは自分の仕事や日常生活のこんな場面で役立つかもしれないな」「こうすればもっとうまくいくかもしれない」と、具体的な応用方法を考えながら学ぶことが多いですか？", supplement: "（例えば、料理番組を見て新しい調理法を学んだら、「今度、あの残り物の野菜で試してみよう」と考えたり、健康に関する記事を読んだら、「自分の生活習慣でこれを実践してみよう」と具体的な行動に繋げようとしたりする）", targetScore: "M2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

// === 特別な3択M質問（第2軸）===
{ id: 82, question: "物事を進めたり、新しい情報に触れたりする際、あなたが最も『しっくりくる』あるいは『自分らしい』と感じるやり方はどのようなものでしょうか？", supplement: "（3つの選択肢から1つだけ選んでください）", targetScore: "M2", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: true },

// === 第3軸：思考/感情（25問）===
// === 思考型（A3）の質問: 8問 ===
{ id: 83, question: "何か大切なことを決める際、あなたは個人的な気持ちや周りの人の意見も参考にしつつ、最終的には客観的な情報（例えば、データや事実）や論理的な分析に基づいて判断することが多いですか？", supplement: "（例えば、引越し先を選ぶとき、友人のおすすめも聞きつつ、最終的には家賃、通勤時間、部屋の広さといった具体的な情報を比較検討して決める。感情よりも事実や論理を優先して結論を出すことが多いかどうか）", targetScore: "A3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 84, question: "何か問題が起きた原因を探ろうとするとき、感情的な部分は一旦横に置いて、まず「何が起きたのか」「なぜそうなったのか」という事実関係を一つ一つ整理し、筋道を立てて考えることを実際に心がけていますか？", supplement: "（例えば、料理がレシピ通りに美味しくできなかった時、がっかりする気持ちはあっても、まず「材料の分量は正しかったか？」「手順で間違ったところはなかったか？」と、原因を冷静に分析しようとする）", targetScore: "A3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 85, question: "効率の悪いやり方や、話のつじつまが合わない説明に気づいた時、「これはおかしいな」と違和感を覚え、もっと合理的で、誰が聞いても納得できるような形に直したり、改善したりしたいと思いますか？ また、実際にそう提案したり行動したりしますか？", supplement: "（例えば、町内会の集金方法がとても手間がかかるものだと感じたら、もっと簡単で間違いのない方法を具体的に考えて提案してみたり、誰かの話が矛盾していると感じたら、相手を責めるのではなく、論点を整理して分かりやすく説明し直したりする）", targetScore: "A3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 86, question: "他の人と意見が食い違った時、お互いの感情や気持ちよりもまずは、主張や論点の内容をはっきりさせ、事実に基づいて冷静に、そして建設的に話し合いますか？", supplement: "（例えば、友人との旅行計画で意見が分かれた時、自分の希望を一方的に主張するのではなく、「それぞれの案の良い点は何か、問題点は何か」を落ち着いて整理し、お互いが納得できる結論を見つけようと努力する）", targetScore: "A3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 87, question: "他の人の意見や話を聞く際、その内容が論理的にスッキリしているか、客観的な根拠に基づいているかを重視し、感情的な訴えや熱意は考慮しないことが多いですか？", supplement: "（例えば、誰かが新しいアイデアを情熱的に語っていても、そのアイデアが実際にうまくいくかどうかについては、感情論ではなく、データや論理的な可能性に基づいて冷静に判断しようとする）", targetScore: "A3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 88, question: "あなたは、感情に訴えかけるようなコミュニケーション（例えば、感動的な話や情緒的な表現）や、心と心が深く通じ合うような情緒的なやり取りは、少し苦手だと感じますか？", supplement: "（例えば、誰かが涙ながらに何かを訴えてきても、どう反応して良いか戸惑ってしまったり、論理的ではない感情的な会話が続くと少し疲れてしまったり、あるいは人と深く気持ちを分かち合うよりも、事実や情報を交換する方が気楽だと感じる）", targetScore: "A3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 89, question: "自分の判断が正しいと強く確信した場合、たとえ周りの人から反対されたり、理解されなかったりしても、その正当性をデータや論理を示して粘り強く説明し、理解を求めようとしますか？", supplement: "（例えば、会議で自分の提案が最初は受け入れられなくても、感情的になったり諦めたりするのではなく、「このデータを見てください」「論理的に考えるとこうなります」と、根気強く説得を試みる）", targetScore: "A3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 90, question: "何かを判断したり、人と接したりする際に、公平であることや正義感を大切にし、個人的な好き嫌いやその場の人間関係に流されることなく、常に一貫した基準で行動しようと心がけていますか？", supplement: "（例えば、グループ内で何かを決める際、仲の良い友人の意見だからといって無条件に賛成するのではなく、内容そのものが公平で正しいかどうかを基準に判断したり、ルール違反を見かけたら、相手が誰であっても注意したりする）", targetScore: "A3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

// === 感情型（E3）の質問: 8問 ===
{ id: 91, question: "何か大切なことを決める際、あなたは個人的な感情や周囲の意見を優先することが、ご自身によく当てはまりますか？", supplement: "（例えば、チームで何かを決める際、最も効率的な案よりも、メンバー全員が納得し、気持ちよく取り組める案を選ぶ）", targetScore: "E3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 92, question: "他の人の嬉しい話を聞けば自分のことのように心から喜び、悲しい話を聞けばまるで自分が体験したかのように深く胸を痛めるなど、相手の感情に強く共感し、その気持ちに寄り添ってご自身の言葉や行動を選ぶことがよくありますか？", supplement: "（例えば、友人が試験に合格したと聞けば一緒に飛び上がって喜び、落ち込んでいる人を見れば「何かできることはないかな」と自然に声をかけたり、そっと寄り添ったりするような、相手の気持ちを敏感に感じ取り、それに応じた行動を取る）", targetScore: "E3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 93, question: "たとえ少し手間がかかったり、効率的ではなかったりしても、関わる人みんなが納得し、誰も嫌な気持ちにならず、全体として穏やかで心地よい結論や進め方になることを、何よりも大切にして物事を進めようとしますか？", supplement: "（例えば、家族旅行の計画を立てる際、一番安くて早いルートを選ぶよりも、おじいちゃんおばあちゃんも楽しめるように休憩を多く取ったり、みんなの希望を少しずつ取り入れたりして、全員が「楽しかったね」と言えるような結果を優先する）", targetScore: "E3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 94, question: "友人や家族など、誰かから相談を受けたとき、すぐに「こうすればいいよ」と具体的な解決策を教えるよりも、まず相手がどんな気持ちでいるのか、何に困っているのかをじっくりと聴き、その気持ちを「うんうん、そうだよね」と受け止めることを最も大切にしていますか？", supplement: "（例えば、後輩から仕事の悩みを打ち明けられたら、すぐに正論でアドバイスをするのではなく、「それは大変だったね」「よく頑張ってるね」とまず相手の頑張りや辛い気持ちに共感し、相手が安心して話せるような雰囲気を作ることを優先する）", targetScore: "E3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 95, question: "道端で困っている様子の人を見かけたり、誰かが助けを必要としていると感じたりした時、見て見ぬふりをすることができず、自然と「何かお手伝いしましょうか？」と声をかけたり、手助けをしたりする行動を取りますか？", supplement: "（例えば、駅で大きな荷物を持って階段を上がろうとしているお年寄りを見かけたら、ためらわずに駆け寄って「荷物をお持ちしますよ」と申し出たり、職場で同僚が大量の仕事を抱えて困っていたら「何か手伝えることある？」と声をかけたりするような、自然な思いやりからの行動）", targetScore: "E3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 96, question: "あなたが所属しているグループやチームの中で、誰かが輪に入れず寂しそうにしていたり、あるいは何か不快な思いをしているのではないかと気づきやすく、その人のために「大丈夫？」と声をかけたり、さりげなくフォローしたりするようなことを実践していますか？", supplement: "（例えば、飲み会や休憩時間に一人でポツンとしている人がいたら、積極的に話しかけて会話の輪に入れてあげようとしたり、誰かが傷つくような発言があった際に、そっとその人を気遣ったりするような、周りの人の心の動きに敏感で、思いやりのある行動）", targetScore: "E3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 97, question: "他の人と話している時、相手がはっきりと言葉にしなくても、その人の表情、声の調子、ちょっとした仕草などから、「あ、今この人はこう感じているのかな」とその人の本当の気持ちや心の状態を察することが得意だと思いますか？", supplement: "（例えば、友人が口では「大丈夫、元気だよ」と言っていても、その声のトーンや目の動きから「何か悩んでいるな」「無理しているな」と感じ取り、そっと気遣うことができるような、言葉にならないサインを読み取る力）", targetScore: "E3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 98, question: "ご自身の行動や言葉が、相手にどのような感情的な影響（嬉しい気持ちにさせるか、悲しい気持ちにさせるかなど）を与えるかを常に意識し、できるだけ相手にとってあたたかく、前向きな気持ちになれるような影響を与えようと心がけて行動していますか？", supplement: "（例えば、誰かに何かをお願いする時でも、命令口調ではなく「～していただけると助かります」と丁寧な言葉を選んだり、相手の良いところを見つけて具体的に褒めたり、励ましの言葉を意識的にかけたりするような、思いやりのあるコミュニケーションを実践している）", targetScore: "E3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

// === バランス型（M3）の質問: 8問 ===
{ id: 99, question: "感情的になった場面でも、実際に一呼吸おいて冷静な対応ができることが多いですか？", supplement: "（例えば、家族と口論になりそうな時、カッとなっても実際に深呼吸して『ちょっと落ち着こう』と言えたり、仕事で腹が立っても、メールの返信を一晩寝かせてから冷静に書き直したりすること）", targetScore: "M3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 100, question: "意見が対立した時、実際に両者の話をじっくり聞いて、みんなが納得できる新しい案を提案して実行に移したことがありますか？", supplement: "（例えば、家族の外出先で意見が分かれた時、全員の希望を聞いた上で『じゃあ午前中はA、午後はBに行こう』と実際に提案して、その通り行動したような経験）", targetScore: "M3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 101, question: "人を評価する時、仕事の成果だけでなく、実際にその人の普段の振る舞いや周りへの気遣いも含めて判断し、それを言葉や行動で示していますか？", supplement: "（例えば、バイトの後輩を評価する時、仕事の速さだけでなく、お客様への笑顔や同僚への気配りも見て『君の優しい接客もすごくいいよ』と実際に褒めたり、PTAの役員を選ぶ時も、能力だけでなく人柄も考えて推薦したりすること）", targetScore: "M3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 102, question: "何かを決める時、効率だけでなく関わる人の気持ちも考えて、実際にみんなに配慮した進め方をしていますか？", supplement: "（例えば、家族旅行の計画で、安くて早いルートより、おばあちゃんも楽に移動できるルートを実際に選んで予約したりすること）", targetScore: "M3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 103, question: "何か大切なことを決める際、あなたは『論理的に正しいかどうか』ということと、『関わる人々の気持ちや全体の調和が保たれるかどうか』ということの両方を同じくらい大切に考え、そのバランスが取れた結論を出すことを最も重視して行動しますか？", supplement: "（例えば、ある決定が非常に合理的（論理的）であっても、それによって誰かが深く傷ついたり、チームの雰囲気が悪くなったりするなら再考したり、逆に、皆が感情的に賛成していることでも、よくよく考えると論理的な問題点や将来的なリスクがあれば、立ち止まって慎重に検討したりする。常に『頭の納得』と『心の納得』の両方を満たす調和点を探し、それが見つかった時に最も「正しい判断ができた」と感じるかどうか）", targetScore: "M3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 104, question: "『なんとなく嫌な予感』がした時、その直感を無視せず、実際に情報を集めて確認してから行動を決めていますか？", supplement: "（例えば、投資話に違和感を感じたら、実際にネットで評判を調べたり、詳しい人に聞いたりしてから断ったりすること）", targetScore: "M3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 105, question: "誰かに改善してほしい点や、少し厳しい内容を伝える必要がある場合、伝えるべき事実や論理（「ここが問題で、こうしてほしい」ということ）を明確に伝えつつも、相手の気持ちを傷つけないように言葉を選んだり、励ましや共感の言葉を添えたりと、伝え方のバランスをうまくとることを実際に心がけていますか？", supplement: "（例えば、部下の仕事のミスを指摘する際、ただ「ダメだ」と言うのではなく、「この部分は良くなかったけれど、君のこういうところは素晴らしいから、次はこうすればもっと良くなるよ」と、具体的な問題点と相手への配慮の両方を伝えようとする）", targetScore: "M3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

{ id: 106, question: "目先の利益より、長期的な人間関係や影響を考えて、実際に違う選択をしたことがありますか？", supplement: "（例えば、安い業者より、長年の付き合いがある少し高い業者を実際に選んだり、今は損でも将来のために実際に投資したりすること）", targetScore: "M3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: false },

// === 特別な3択M質問（第3軸）===
{ id: 107, question: "何か大切なことを決める際、あなたが最終的に最も重視し、「これこそが最善の判断だ」と心から納得できるのは、どのような基準で判断した時ですか？", supplement: "（3つの選択肢から1つだけ選んでください）", targetScore: "M3", scoreEffect: 1, isCheckQuestion: false, checkClearIf: null, isLevel6Condition: false, isMChoice: true }
];

            const startScreen = document.getElementById('start-screen');
            const quizScreen = document.getElementById('quiz-screen');
            const resultScreen = document.getElementById('result-screen');

            const startButton = document.getElementById('start-button');
            const questionCounterEl = document.getElementById('question-counter');
            const questionTextEl = document.getElementById('question-text');
            const questionSupplementEl = document.getElementById('question-supplement');
            const choicesAreaEl = document.getElementById('choices-area');
            const nextQuestionButton = document.getElementById('next-question-button');
            const resultCodeEl = document.getElementById('result-code');
            const restartButton = document.getElementById('restart-button');
            const progressBar = document.getElementById('progress-bar');

            let currentQuestionIndex = 0;
            let userRawAnswers = []; 
            
            let scores = {
                S1: 0, M1: 0, P1: 0, V2: 0, M2: 0, G2: 0, A3: 0, M3: 0, E3: 0, CL: 0
            };

            startButton.addEventListener('click', startQuiz);
            nextQuestionButton.addEventListener('click', loadNextQuestion);
            restartButton.addEventListener('click', restartQuiz);

            function startQuiz() {
                if (typeof allQuestions === 'undefined' || allQuestions.length !== 107) { 
                    alert("エラー：質問データが正しく読み込まれていないか、数が一致しません。全107問のデータが allQuestions 配列に正しく設定されているか確認してください。");
                    return;
                }
                startScreen.style.display = 'none';
                resultScreen.style.display = 'none';
                quizScreen.style.display = 'block';
                currentQuestionIndex = 0;
                userRawAnswers = new Array(allQuestions.length).fill(null);
                for (let key in scores) { scores[key] = 0; }
                updateProgressBar();
                loadQuestion(currentQuestionIndex);
            }

            function updateProgressBar() {
                const progress = allQuestions.length > 0 ? ((currentQuestionIndex) / allQuestions.length) * 100 : 0;
                progressBar.style.width = progress + '%';
            }

            function loadQuestion(index) {
                if (index < allQuestions.length) {
                    const questionData = allQuestions[index];
                    questionCounterEl.textContent = `質問 ${index + 1} / ${allQuestions.length}`;
                    questionTextEl.textContent = questionData.question;
                    questionSupplementEl.textContent = questionData.supplement || "";
                    
                    choicesAreaEl.innerHTML = '';
                    if (questionData.isMChoice) { 
                        let choiceTextsForAxis;
                        if (questionData.targetScore && questionData.targetScore.includes("1")) choiceTextsForAxis = mChoiceTexts.axis1;
                        else if (questionData.targetScore && questionData.targetScore.includes("2")) choiceTextsForAxis = mChoiceTexts.axis2;
                        else if (questionData.targetScore && questionData.targetScore.includes("3")) choiceTextsForAxis = mChoiceTexts.axis3;
                        else { 
                            console.error("MChoiceのtargetScoreが不正です: ", questionData);
                            choiceTextsForAxis = ["選択肢1", "選択肢2", "選択肢3"]; 
                        }
                        
                        choiceTextsForAxis.forEach((text, i) => {
                            const button = document.createElement('button');
                            button.textContent = text;
                            button.dataset.choiceIndex = i; 
                            button.addEventListener('click', () => selectAnswer(index, i, button));
                            choicesAreaEl.appendChild(button);
                        });
                    } else { 
                        choiceTexts.forEach((text, i) => {
                            const button = document.createElement('button');
                            button.textContent = text;
                            button.dataset.score = choiceScores[i]; 
                            button.addEventListener('click', () => selectAnswer(index, choiceScores[i], button));
                            choicesAreaEl.appendChild(button);
                        });
                    }
                    nextQuestionButton.disabled = true;
                } else {
                    showResults();
                }
            }

            function selectAnswer(questionIndex, value, selectedButton) { 
                userRawAnswers[questionIndex] = value; 
                const buttons = choicesAreaEl.querySelectorAll('button');
                buttons.forEach(button => button.classList.remove('selected'));
                selectedButton.classList.add('selected');
                nextQuestionButton.disabled = false;
            }

            function loadNextQuestion() {
                currentQuestionIndex++;
                updateProgressBar();
                loadQuestion(currentQuestionIndex);
            }

            function calculateAndDetermineTypes() {
                for (let key in scores) { scores[key] = 0; }

                allQuestions.forEach((q, index) => {
                    const userAnswer = userRawAnswers[index];
                    if (userAnswer === null) { 
                        console.warn(`質問ID ${q.id} が未回答です。`);
                        return; 
                    }

                    if (q.isMChoice) { 
                        const axisNumChar = q.targetScore.charAt(1); 
                        let s_v_a_ScoreKey = "", p_g_e_ScoreKey = "", mScoreKey = "";

                        if (axisNumChar === "1") { s_v_a_ScoreKey = "S1"; p_g_e_ScoreKey = "P1"; mScoreKey = "M1"; }
                        else if (axisNumChar === "2") { s_v_a_ScoreKey = "V2"; p_g_e_ScoreKey = "G2"; mScoreKey = "M2"; }
                        else if (axisNumChar === "3") { s_v_a_ScoreKey = "A3"; p_g_e_ScoreKey = "E3"; mScoreKey = "M3"; }
                        
                        // 3択質問も他と同じ2点満点に統一
                        if (userAnswer === 0) scores[s_v_a_ScoreKey] += 2; 
                        else if (userAnswer === 1) scores[p_g_e_ScoreKey] += 2; 
                        else if (userAnswer === 2) scores[mScoreKey] += 2; 

                    } else if (q.targetScore === "CL") { 
                        // scoreEffect: 1 = 通常の質問（高スコア=高レベル）
                        // scoreEffect: -1 = 逆転質問（高スコア=低レベル）
                        let processedScore = q.scoreEffect === 1 ? userAnswer : -userAnswer;
                        scores.CL += processedScore;
                    } else { 
                        if (scores.hasOwnProperty(q.targetScore)) {
                            scores[q.targetScore] += userAnswer; 
                        }
                    }
                });

                let axis1Type, axis2Type, axis3Type;
                if (scores.M1 >= scores.S1 && scores.M1 >= scores.P1) axis1Type = "M";
                else if (scores.S1 >= scores.P1) axis1Type = "S"; else axis1Type = "P";
                if (scores.M2 >= scores.V2 && scores.M2 >= scores.G2) axis2Type = "M";
                else if (scores.V2 >= scores.G2) axis2Type = "V"; else axis2Type = "G";
                if (scores.M3 >= scores.A3 && scores.M3 >= scores.E3) axis3Type = "M";
                else if (scores.A3 >= scores.E3) axis3Type = "A"; else axis3Type = "E";
                const typeCode = axis1Type + axis2Type + axis3Type;

                // 意識レベル判定
                const clThresholds = {
                    level1_end: -1,   // Level 1: -64点 ～ -1点
                    level2_end: 10,   // Level 2: 0点   ～ +10点
                    level3_end: 25,   // Level 3: +11点 ～ +25点
                    level4_end: 35,   // Level 4: +26点 ～ +35点
                    level5_end: 47,   // Level 5: +36点 ～ +47点
                };

                // パターン認識用の変数を追加
                let responsePatterns = {
                    fearBased: 0,      // 恐怖ベースの回答数
                    courageBased: 0,   // 勇気ベースの回答数
                    loveBased: 0,      // 愛ベースの回答数
                    wisdomBased: 0     // 智慧ベースの回答数
                };

                // 特定のパターンを検出する質問IDを定義
                const patternQuestions = {
                    fear: [1, 2, 3, 4, 5, 6, 28, 29],
                    courage: [7, 8, 9, 10, 11, 12],
                    love: [13, 14, 15, 16, 17, 18],
                    wisdom: [19, 20, 21, 22, 23, 24]
                };

                // パターンをカウント
                patternQuestions.fear.forEach(id => {
                    const q = allQuestions.find(question => question.id === id);
                    const qIndex = allQuestions.indexOf(q);
                    if (qIndex !== -1 && userRawAnswers[qIndex] <= -1) {
                        responsePatterns.fearBased++;
                    }
                });

                patternQuestions.courage.forEach(id => {
                    const q = allQuestions.find(question => question.id === id);
                    const qIndex = allQuestions.indexOf(q);
                    if (qIndex !== -1 && userRawAnswers[qIndex] >= 1) {
                        responsePatterns.courageBased++;
                    }
                });

                // ホーキンズパターン分析
                let hawkinsPatterns = {
                    below200: 0,    // 恐怖、怒り、プライド（200未満）
                    courage250: 0,  // 勇気、中立（200-250）
                    acceptance350: 0, // 意欲、受容（250-350）
                    reason400: 0,   // 理性（350-400）
                    love500: 0,     // 愛（400-500）
                    above500: 0     // 喜び、平和、悟り（500以上）
                };

                // 各質問の回答を分析
                allQuestions.forEach((q, index) => {
                    const answer = userRawAnswers[index];
                    if (answer === null) return;
                    
                    // 恐怖・怒り系の質問（ID: 1,2,3,4,5,6,28,29）
                    const fearQuestions = [1,2,3,4,5,6,28,29];
                    if (fearQuestions.includes(q.id)) {
                        // scoreEffect: -1の質問で、負の回答（当てはまる）の場合
                        if (q.scoreEffect === -1 && answer >= 1) {
                            hawkinsPatterns.below200++;
                        }
                    }
                    
                    // 勇気・受容系の質問（ID: 7,8,9,10,11,12）
                    const courageQuestions = [7,8,9,10,11,12];
                    if (courageQuestions.includes(q.id)) {
                        if (answer >= 1) {
                            hawkinsPatterns.courage250++;
                            if (answer === 2) hawkinsPatterns.acceptance350++;
                        }
                    }
                    
                    // 理性・愛系の質問（ID: 13,14,15,16,17,18）
                    const reasonLoveQuestions = [13,14,15,16,17,18];
                    if (reasonLoveQuestions.includes(q.id)) {
                        if (answer >= 1) {
                            hawkinsPatterns.reason400++;
                            if (answer === 2) hawkinsPatterns.love500++;
                        }
                    }
                    
                    // 高次の意識の質問（ID: 19,20,21,22,23,24）
                    const higherQuestions = [19,20,21,22,23,24];
                    if (higherQuestions.includes(q.id)) {
                        if (answer >= 1) {
                            hawkinsPatterns.love500++;
                            if (answer === 2) hawkinsPatterns.above500++;
                        }
                    }
                });

                let provisionalLevel;
                if (scores.CL <= clThresholds.level1_end) provisionalLevel = 1;
                else if (scores.CL <= clThresholds.level2_end) provisionalLevel = 2;
                else if (scores.CL <= clThresholds.level3_end) provisionalLevel = 3;
                else if (scores.CL <= clThresholds.level4_end) provisionalLevel = 4;
                else if (scores.CL <= clThresholds.level5_end) provisionalLevel = 5;
                else provisionalLevel = 6; 

                // チェック質問による補正（14問に更新）
                let clearedCheckQuestions = 0;
                allQuestions.forEach((q, index) => {
                    if (q.isCheckQuestion) {
                        const rawAnswerScore = userRawAnswers[index];
                        if (q.checkClearIf && Array.isArray(q.checkClearIf) && q.checkClearIf.includes(rawAnswerScore)) {
                            clearedCheckQuestions++;
                        }
                    }
                });
                
                let finalConsciousnessLevel = provisionalLevel;
                // 14問ベースの上限ルール
                const checkClearRate = clearedCheckQuestions / 14;
                if (checkClearRate < 0.25) {  // 25%未満（3問以下）
                    finalConsciousnessLevel = Math.min(provisionalLevel, 2);
                } else if (checkClearRate < 0.45) {  // 45%未満（6問以下）
                    finalConsciousnessLevel = Math.min(provisionalLevel, 3);
                } else if (checkClearRate < 0.65) {  // 65%未満（9問以下）
                    finalConsciousnessLevel = Math.min(provisionalLevel, 4);
                } else if (checkClearRate < 0.85) {  // 85%未満（12問以下）
                    finalConsciousnessLevel = Math.min(provisionalLevel, 5);
                }

                // 高次の意識パターンの確認を改善
                if (hawkinsPatterns.above500 >= 2 && hawkinsPatterns.love500 >= 3) {
                    // レベル5以上の可能性を確実に
                } else if (finalConsciousnessLevel > 5) {
                    finalConsciousnessLevel = 5;
                }

                // より柔軟なパターン分析
                const totalHigherResponses = hawkinsPatterns.love500 + hawkinsPatterns.above500;
                const totalLowerResponses = hawkinsPatterns.below200;
                
                if (totalLowerResponses > 5 && provisionalLevel > 2) {
                    finalConsciousnessLevel = Math.min(finalConsciousnessLevel, 2);
                } else if (totalHigherResponses >= 8 && provisionalLevel >= 4) {
                    // 高次パターンが多い場合は下方修正しない
                }

                // レベル6到達の特別条件
                if (finalConsciousnessLevel >= 5) {
                    // 条件1: 意識レベル基本スコアが理論上の最高得点である+64点
                    // 条件2: チェック質問14問を全てクリア
                    // 条件3: レベル6特有の質問3問（ID:25,26,27）全てに「非常によく当てはまる（+2点）」と回答
                    if (scores.CL === 64 && clearedCheckQuestions === 14) { 
                        let level6SpecialConditionsMet = true;
                        allQuestions.forEach((q, index) => {
                            if (q.isLevel6Condition) {
                                if (userRawAnswers[index] !== 2) { 
                                    level6SpecialConditionsMet = false;
                                }
                            }
                        });
                        if (level6SpecialConditionsMet) {
                            finalConsciousnessLevel = 6;
                        } else {
                            finalConsciousnessLevel = 5; 
                        }
                    } else if (finalConsciousnessLevel === 6) {
                         finalConsciousnessLevel = 5;
                    }
                }
                
                return { typeCode, consciousnessLevel: finalConsciousnessLevel };
            }

            function showResults() {
                quizScreen.style.display = 'none';
                progressBar.style.width = '100%';
                
                let allAnswered = true;
                if (userRawAnswers.length !== allQuestions.length) {
                    allAnswered = false;
                } else {
                    for(let i=0; i < userRawAnswers.length; i++){
                        if(userRawAnswers[i] === null){
                            allAnswered = false;
                            break;
                        }
                    }
                }

                if (allQuestions.length !== 107 || !allAnswered ) {
                     resultCodeEl.textContent = "エラー：全107問の質問に回答してください。または質問データが正しく読み込まれていません。";
                } else {
                    const results = calculateAndDetermineTypes();
                    resultCodeEl.textContent = `${results.typeCode}-${results.consciousnessLevel}`;
                }
                resultScreen.style.display = 'block';
            }

            function restartQuiz() {
                startScreen.style.display = 'block';
                resultScreen.style.display = 'none';
                currentQuestionIndex = 0;
                if (typeof allQuestions !== 'undefined' && allQuestions.length > 0) {
                    userRawAnswers = new Array(allQuestions.length).fill(null);
                } else {
                    userRawAnswers = [];
                }
                for (let key in scores) { scores[key] = 0; }
                progressBar.style.width = '0%';
            }
        });
    </script>
</body>
</html>
